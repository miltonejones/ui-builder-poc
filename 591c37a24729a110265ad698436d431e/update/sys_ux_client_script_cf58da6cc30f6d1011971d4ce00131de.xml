<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ux_client_script">
    <sys_ux_client_script action="INSERT_OR_UPDATE">
        <controller_preset/>
        <includes/>
        <macroponent display_value="New Deduction default">897f4d20c34b6d1011971d4ce00131bc</macroponent>
        <name>Save form</name>
        <preset/>
        <required_translations>[ ]</required_translations>
        <script><![CDATA[/**
 * Handles a request to create a new record and update the x_ebh_voluntary_0_deductions table with deduction data.
 * @param {Object} params - Object containing api, event, helpers, and imports
 * @param {Object} params.api - The ServiceNow API object
 * @param {Object} params.event - The request event object
 * @param {Object} params.helpers - The ServiceNow API helpers object
 * @param {Object} params.imports - The ServiceNow API imports object
 */
function handler({ api, event, helpers, imports }) {
  // Get deductions from the api state and the current record form from the api data
  const { deductions } = api.state;
  const g_form = api.data.glide_form_1.nowRecordFormBlob.gForm;

  // Get the names of all fields in the current record form and log their values
  const fields = g_form.getFieldNames();
  fields.forEach((field) => console.log(field, g_form.getValue(field)));

  // Get the sys_id of the current record and log it along with the deductions
  const incSysid = g_form.getUniqueValue();
  console.log({ incSysid, deductions });

  // For each deduction, create a query string and update the x_ebh_voluntary_0_deductions table
  deductions.forEach((deduction) => {
    const query = createDeductionQuery(deduction, incSysid);
    console.log({ query });
    updateTable(query);
  });

  // Set the created_sys_id and confirmation_message api state variables
  api.setState("created_sys_id", incSysid);
  api.setState("confirmation_message", `Item "${incSysid}" was created.`);
  helpers.navigate.to('preview', {'sysId': incSysid});
  // Return nothing
  return;

  /**
   * Creates a query string for updating/creating a record in the x_ebh_voluntary_0_deductions table.
   * @param {Object} object - Object containing fields and values to update/create record
   * @param {string} sys_id - The sys_id of the current record
   * @returns {string} - The query string for updating/creating the record
   */
  function createDeductionQuery(object, sys_id) {
    return Object.keys(object)
      .filter((item) => !!object[item]) // Filter out any fields with falsy values
      .filter((key) => ["validation"].every((word) => key !== word)) // Filter out any fields with the word "validation" in their name
      .map((key) => `${key}=${object[key]}`) // Create an array of key=value strings
      .concat(`deduction_ticket_id=${sys_id}`) // Add the sys_id to the array
      .join("^"); // Join the array with "^" to create the query string
  }

  /**
   * Updates or creates a record in the x_ebh_voluntary_0_deductions table.
   * @param {string} templateFields - The query string for updating/creating the record
   */
  function updateTable(templateFields) {
    const TABLE_NAME = "x_ebh_voluntary_0_deductions";

    // Define command object with required fields for updating/creating record
    const command = {
      table: TABLE_NAME,
      templateFields,
      useSetDisplayValue: false,
    };

    // If sys_id is not provided, create a new record
    api.data.create_record_1.execute(command);
  }
}
]]></script>
        <script_api_version>2.0.0</script_api_version>
        <sys_class_name>sys_ux_client_script</sys_class_name>
        <sys_created_by>Milton.Jones@employbridge.com</sys_created_by>
        <sys_created_on>2023-05-23 15:36:22</sys_created_on>
        <sys_id>cf58da6cc30f6d1011971d4ce00131de</sys_id>
        <sys_mod_count>19</sys_mod_count>
        <sys_name>Save form</sys_name>
        <sys_package display_value="Voluntary Deductions" source="x_ebh_voluntary_0">591c37a24729a110265ad698436d431e</sys_package>
        <sys_policy/>
        <sys_scope display_value="Voluntary Deductions">591c37a24729a110265ad698436d431e</sys_scope>
        <sys_update_name>sys_ux_client_script_cf58da6cc30f6d1011971d4ce00131de</sys_update_name>
        <sys_updated_by>Milton.Jones@employbridge.com</sys_updated_by>
        <sys_updated_on>2023-05-24 19:16:11</sys_updated_on>
        <target>macroponent</target>
        <type>default</type>
    </sys_ux_client_script>
</record_update>
